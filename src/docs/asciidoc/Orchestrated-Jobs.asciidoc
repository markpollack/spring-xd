[[orchestrated-jobs]]
== Orchestrated Jobs

Spring XD provides a DSL for orchestrating deployed jobs.  The purpose of this feature is
to allow users to create a directed graph, where each node of the graph is a deployed job.

=== DSL Components

The DSL for the orchestrated jobs is expressed when a user creates a job definition
within Spring XD.  The jobs referenced by the DSL must be defined and deployed prior to
launching the orchestrated job. For example:
----
xd:> job create batch_simple_def --definition "batch_simple_module" --deploy
xd:> job create batch_basic_def --definition "batch_basic_module" --deploy
xd:> job create testjob --definition "batch_simple_def || batch_basic_def" --deploy
xd:> job launch testjob
----

==== Conditional Execution

Conditional execution is expressed using a double pipe symbol `||`.  This allows  each
job in the sequence to be launched only if the previous job successfully completed.  In the example below:
----
job create testjob --definition "batch_simple_def || batch_basic_def"
----
The batch_simple job will launch and if successful the batch_basic will be launched.
However if batch_simple fails then batch_basic will not launch.

==== Transitions

As with any directed graph a specific node can be launched based on the some criteria.
In this case we can launch a specific job or jobs based on the exit status of another
job. A job transition is represented by the pipe symbol `|`.  For example:
----
job create testjob --definition "aaa | foo=bbb | bar=ccc|| ddd"
----
In the example above aaa would launch and if it had an exit status of foo, then the bbb
job would launch. If the exit status of aaa was bar then ccc would launch.  All other
statuses returned by aaa would launch ddd.
Another transition that can be specified is the `'\*'`.  This means that any Exit Status
that is not specifically enumerated by a transition for the current job, the job
associated with the '*' will be launched. ie.
----
job create testjob --definition "aaa | foo=bbb | bar=ccc|| ddd | baz=eee | '*'= $END"
----
In the example above, if an exit status of ddd is baz then the eee job will launch all
other exit statusâ€™s would end the job execution.

===== Keywords

Orchestrated jobs offers 2 target keywords for transitions where the target of the
transition is not another job.

* $END - will either terminate the job orchestration or if used in a split, will
terminate the flow within the specific split.
* $FAIL - will set the status for the orchestrated job to fail and terminate the job
orchestration.

==== Split

Splits allow a for multiple jobs within a orchestrated job to be run in parallel.
It is denoted by  using angle brackets `<>` to group jobs and flows that are to be run
in parallel.  These jobs and flows are separated by the ampersand `&` character.
For example:
----
job create testjob --definition "<aaa & bbb & ccc>"
----
The example above will launch jobs aaa, bbb and ccc in parallel.  With the job 
orchestration DSL a user may also execute multiple split groups in succession.  For example:
----
job create testjob --definition "<aaa & bbb & ccc> || <ddd & eee & fff>"
----
In the example above jobs aaa, bbb and ccc will be launched in parallel,
 once they all complete then jobs ddd, eee and fff will be launched in parallel.  
 Once they complete the orchestrated job will end.

===== Parenthesis

Supports the ability to launch conditional jobs within a split, for example:
----
job create testjob --definition "<(aaa || bbb || ccc) & ddd & eee> || fff"
----
In this example the jobs aaa, bbb, and ccc will be launched in succession at the same 
time that jobs ddd and eee are launched in parallel.  Once all of the jobs are complete 
within the angle brackets job fff will be launched.

=== Orchestrated Job Parameters

Orchestrated jobs currently supports the timeout parameter which establishes the amount 
of time in milliseconds a job can execute within the job orchestration before the XD throws an
`UnexpectedJobExecutionException`.  The default is `-1` which  means no timeout.
An example using the timeout is as follows:
----
job create testjob --definition "aaa || bbb --timeout=5000"
----
The timeout parameter affects all the jobs within the job orchestration.
